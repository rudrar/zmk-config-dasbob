#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mmv { time-to-max-speed-ms = <600>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        repeatOrKP: repeatOrKP {
            compatible = "zmk,behavior-hold-tap";
            label = "REPEATORKP";
            bindings = <&key_repeat>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&removeWORD>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LGUI>;

            label = "LOCK";
        };

        word_delete: word_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "WORD_DELETE";
            tap-ms = <50>;
            wait-ms = <25>;
        };

        drun: drun {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "DRUN";
        };

        removeWORD: removeWORD {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>;

            label = "REMOVEWORD";
        };
    };

    combos {
        compatible = "zmk,combos";

        capsword {
            bindings = <&caps_word>;
            key-positions = <31 30>;
        };

        dele_word {
            bindings = <&word_delete>;
            key-positions = <31 34>;
        };

        qwertyLayer {
            bindings = <&to 4>;
            key-positions = <0 9>;
            require-prior-idle-ms = <1500>;
        };

        rcstrcstrcst {
            bindings = <&to 0>;
            key-positions = <20 29>;
            layers = <4>;
            require-prior-idle-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own

        layer_0 {
            bindings = <
&kp Q           &kp L         &kp Y         &kp P        &kp B                 &kp Z    &kp F           &kp O        &kp U             &kp SQT
&hm LEFT_ALT C  &hm LSHIFT R  &hm LCTRL S   &hm LGUI T   &kp G                 &kp M    &hm LEFT_GUI N  &hm LCTRL E  &hm LEFT_SHIFT I  &hm LEFT_ALT A
&kp W           &kp J         &kp V         &kp D        &kp K                 &kp X    &kp H           &kp DOT      &kp COMMA         &mt SEMI MINUS
                              &lt 1 ESCAPE  &lt 3 SPACE  &mt DELETE BACKSPACE  &kp TAB  &lt 3 SPACE     &lt 2 ENTER
            >;
        };

        number {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &kp STAR   &kp N7  &kp N8  &kp N9  &kp COMMA
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &kp FSLH   &kp N4  &kp N5  &kp N6  &kp N0
&kp F11  &kp F12  &trans  &trans  &trans   &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp DOT
                  &trans  &trans  &trans   &trans     &trans  &trans
            >;
        };

        symbol {
            bindings = <
&kp QUESTION       &kp EXCL           &kp CARET              &kp PIPE         &trans       &kp TILDE      &kp DOLLAR     &kp LESS_THAN  &kp GREATER_THAN  &trans
&kp DOUBLE_QUOTES  &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp PERCENT  &kp AT         &kp SLASH      &kp ASTERISK   &kp HASH          &kp KP_EQUAL
&kp SINGLE_QUOTE   &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &trans       &kp AMPERSAND  &kp BACKSLASH  &kp PLUS       &kp MINUS         &trans
                                      &trans                 &trans           &trans       &trans         &trans         &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans          &trans          &trans        &trans           &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT
&trans  &trans          &trans          &trans        &trans           &trans  &kp HOME   &kp END    &trans     &trans
                        &trans          &trans        &trans           &trans  &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&kp Q  &kp W  &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D   &kp F   &kp G   &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp APOS
              &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
